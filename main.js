"use strict";const canvas=document.querySelector("canvas"),CUBE_WIDTH=64,CUBE_HEIGHT=74,setCanvasSize=()=>{canvas.width=window.innerWidth,canvas.height=window.innerHeight};setCanvasSize(),window.addEventListener("resize",setCanvasSize);const ctx=canvas.getContext("2d");ctx.font="bold 13px serif";const assets=["blue","darkBlue","orange","purple","refresh"];let game,cubeTextures,buttonTextures;class Game{constructor(t,e){this.ctx=t,this.canvas=e,this.cubes=null,this.selectedCube=null,this.selectionIndex=null,this.matrix=null,this.releasedCube=null,this.combinations=null,this.loopID=null,this.controls=[],this.generateField(),this.drawField(),this.listenToCanvasEvents(),this.createControls()}loop(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawField(),this.drawControls(),this.loopID=requestAnimationFrame(this.loop.bind(this))}startLoop(){this.loopID=requestAnimationFrame(this.loop.bind(this))}stopLoop(){this.loopID&&cancelAnimationFrame(this.loopID),this.loopID=null}createControls(){this.controls=[],this.controls.push(new Button(.8*this.canvas.width,.3*this.canvas.height,buttonTextures.refresh,this.generateField.bind(this)))}drawControls(){for(const t of this.controls)t.draw(this.ctx)}listenToCanvasEvents(){const t=t=>{this.updateSelectedCube(t.pageX-28,t.pageY-16)},e=t=>{this.updateSelectedCube(t.touches[0].pageX-28,t.touches[0].pageY)};this.canvas.onmousedown=(e=>{this.retrieveCollidingCube(e.pageX,e.pageY),this.canvas.addEventListener("mousemove",t)}),this.canvas.ontouchstart=(t=>{const{pageX:s,pageY:i}=t.touches[0];t.preventDefault();const o=this.controls.find(t=>t.isClicked(s,i));if(o)return o.callback();this.selectedCube&&this.returnSelectedCube(),this.retrieveCollidingCube(s,i),this.canvas.addEventListener("touchmove",e)}),this.canvas.ontouchend=(t=>{this.combineSelection(t.changedTouches[0].pageX,t.changedTouches[0].pageY),this.canvas.removeEventListener("touchmove",e)}),this.canvas.onmouseup=(e=>{game.combineSelection(e.pageX,e.pageY),canvas.removeEventListener("mousemove",t)})}drawField(){if(!(this.cubes.length<=4)){for(const t of this.cubes)t!==this.selectedCube&&t.draw(this.ctx);this.selectedCube&&this.selectedCube.draw(this.ctx)}}generateField(){const t=[],e={},s=this.generateDistribution();let i=this.canvas.width/2,o=this.canvas.height/3*2;for(let n=6;n>0;n--){for(let h=1;h<=n;h++){const r=o+h*CUBE_HEIGHT/4;let c=i-h*CUBE_WIDTH/2;for(let i=0;i<h;i++){const i=randomUpTo(s.length),{group:o,value:l}=s[i],a=t.push(new Cube(c,r,6-n+h,l,o))-1;c+=CUBE_WIDTH,h+1<=n&&(e[a]||(e[a]={}),e[a].l=a+h,e[a].r=a+h+1),e[a-rowSum(n+1)]&&(e[a-rowSum(n+1)].t=a),s.splice(i,1)}}o-=CUBE_HEIGHT/2}this.cubes=t,this.matrix=e}generateDistribution(){const t=[32,32,16,8,8,8,4,4,4,4,2,2,2,2],e=[];for(let s=0;s<4;s++){shuffle(t);for(let i=0;i<t.length;i++)e.push({group:s,value:t[i]})}return shuffle(e)}retrieveCollidingCube(t,e){const[s,i]=this.collidingCubeIndexPair(t,e);if(i>=0){if(this.matrix[i]){const{l:t,r:e,t:s}=this.matrix[i];if(s)return}for(const t in this.matrix){const{t:e}=this.matrix[t];if(e===i){this.releasedCube={[t]:{t:e}},console.log("Temporarily releasing ",e),delete this.matrix[t].t;break}}this.selection={c:s,i:i}}}refreshReleasedCube(){if(this.releasedCube){const[{t:t}]=Object.values(this.releasedCube);this.cubes[t].disabled||(console.log("Unrelease:",this.releasedCube),Object.assign(this.matrix,this.releasedCube)),this.releasedCube=null}}returnSelectedCube(){this.selectedCube&&(this.selectedCube.x=this.selectedCube.startX,this.selectedCube.y=this.selectedCube.startY,this.selectedCube=null,this.selectionIndex=null)}updateSelectedCube(t,e){this.selectedCube&&(this.selection.c.x=t,this.selection.c.y=e)}collidingCubeIndexPair(t,e){const s=[...this.cubes];this.selectionIndex&&s.splice(this.selectionIndex,1);const i=s.sort((t,e)=>e.z-t.z).find(s=>s.isSelected(t,e));return[i,this.cubes.indexOf(i)]}combineSelection(t,e){if(!this.selectedCube)return;const[,s]=this.collidingCubeIndexPair(t,e);if(s<0||!this.canBeCombined(this.selectedCube,this.cubes[s]))this.refreshReleasedCube(),this.returnSelectedCube();else{console.log(`Combining with cube #${s}, removing cube #${this.selectionIndex}`);for(const t in this.matrix){const e=this.matrix[t];for(const t in e)e[t]===this.selectionIndex&&delete e[t]}this.combinationEffect(this.cubes[s]),this.cubes[s].score*=2,this.selectedCube.disabled=!0,this.selection={c:null,i:null}}}canBeCombined(t,e){const s=this.cubes.indexOf(t);return!(t.group!==e.group||t.score!==e.score||this.matrix[s]&&this.matrix[s].t)}combinationEffect(t){let{x:e,y:s}=t;e+=randomUpTo(CUBE_WIDTH);const{score:i}=t;let o,n=0;const h=()=>{this.ctx.translate(e,s),this.ctx.rotate(Math.PI/180*n),this.ctx.fillText(i,0,0),this.ctx.setTransform(1,0,0,1,0,0),s--,n++,o=requestAnimationFrame(h)};h(),setTimeout(()=>{cancelAnimationFrame(o)},2500)}set selection({c:t,i:e}){this.selectedCube&&this.selectionIndex!==e&&this.returnSelectedCube(),t&&e&&(this.selectedCube=t,this.selectionIndex=e)}get selection(){return{c:this.selectedCube,i:this.selectionIndex}}}class Cube{constructor(t,e,s,i,o,n){this.x=t,this.y=e,this.z=s,this.startX=t,this.startY=e,this.image=n,this.group=o,this.score=i,this.hoverImage=null,this.disabled=!1,this.isHovering=!1,this.calcBounds()}calcBounds(){this.leftTop=new Point(this.x,this.y+18),this.top=new Point(this.x+32,this.y),this.rightTop=new Point(this.x+64,this.y+18),this.rightBottom=new Point(this.x+64,this.y+55),this.bottom=new Point(this.x+32,this.y+74),this.leftBottom=new Point(this.x,this.y+55)}isSelected(t,e){if(this.disabled)return!1;let s,i,o,n=!0;return s=new Point(t,e),i=new Vector(this.leftTop,this.top),o=new Vector(s,this.top),n&=i.crossProduct(o)<=0,i=new Vector(this.top,this.rightTop),o=new Vector(s,this.rightTop),n&=i.crossProduct(o)<=0,i=new Vector(this.rightTop,this.rightBottom),o=new Vector(s,this.rightBottom),n&=i.crossProduct(o)<=0,i=new Vector(this.rightBottom,this.bottom),o=new Vector(s,this.bottom),n&=i.crossProduct(o)<=0,i=new Vector(this.bottom,this.leftBottom),o=new Vector(s,this.leftBottom),n&=i.crossProduct(o)<=0,i=new Vector(this.leftBottom,this.leftTop),o=new Vector(s,this.leftTop),n&=i.crossProduct(o)<=0}draw(t,e=`${this.score}`){this.disabled||(t.drawImage(cubeTextures[this.group],this.x,this.y),e&&t.fillText(e,this.x+29,this.y+22))}drawDebug(t){t.lineWidth=1,t.beginPath(),t.lineTo(this.left.x,this.left.y),t.lineTo(this.top.x,this.top.y),t.lineTo(this.right.x,this.right.y),t.lineTo(this.bottom.x,this.bottom.y),t.lineTo(this.left.x,this.left.y),t.closePath(),t.stroke()}set coordinates({x:t,y:e}){this.x=t,this.y=e}get coordinates(){return{x:this.x,y:this.y}}}class Button{constructor(t,e,s,i){this.x=t,this.y=e,this.image=s,this.width=s.width,this.height=s.height,this.callback=i}draw(t){t.drawImage(this.image,this.x,this.y)}isClicked(t,e){return this.x<t&&this.x+this.width>t&&this.y<e&&this.y+this.height>e}}class Point{constructor(t,e){this.x=t,this.y=e}}class Vector{constructor(t,e){this.x=e.x-t.x,this.y=e.y-t.y}crossProduct({x:t,y:e}){return this.x*e-this.y*t}}class AssetManager{constructor(t){this.assets=t}loadAssets(t){const e=[];for(const s of this.assets)e.push(new Promise((e,i)=>{const o=new Image;o.src=`${t}${s}.png`,o.onload=(()=>{e(o)})}));return Promise.all(e)}}function rowSum(t){return t*(t+1)/2}function randomUpTo(t){return Math.floor(Math.random()*Math.floor(t))}function shuffle(t){let e,s,i;for(i=t.length-1;i>0;i--)e=Math.floor(Math.random()*(i+1)),s=t[i],t[i]=t[e],t[e]=s;return t}function getIndex(t=0,e=0,s=0){let i=s,o=e-1;o>0&&(i+=rowSum(o));let n=6-t;if(0!=n){let t=7-n;for(let e=n;e>0;e--,t++)i+=rowSum(t)}return i}const assetManager=new AssetManager(assets);assetManager.loadAssets("./assets/").then(t=>{const[e,s,i,o,n]=t;cubeTextures={0:e,1:s,2:i,3:o},buttonTextures={refresh:n},(game=new Game(ctx,canvas)).startLoop()});